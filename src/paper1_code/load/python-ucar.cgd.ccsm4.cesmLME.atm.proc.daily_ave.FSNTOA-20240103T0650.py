#!/usr/bin/env python3

import os
import shutil
import urllib.request
from platform import python_version
from urllib.error import HTTPError, URLError

################################################################
#
# Generated by: NCAR Climate Data Gateway
# Created: 2024-01-03T06:50:26-07:00
#
# Your download selection includes data that might be secured using API Token based
# authentication. Therefore, this script can have your api-token. If you
# re-generate your API Token after you download this script, the download will
# fail. If that happens, you can either re-download the script or you can edit
# this script replacing the old API Token with the new one. View your API token
# by going to "Account Home":
#
# https://www.earthsystemgrid.org/account/user/account-home.html
#
# and clicking on the "API Token" link under "Personal Account". You will be asked
# to log into the application before you can view your API Token.
#
# Usage: python3 python-ucar.cgd.ccsm4.cesmLME.atm.proc.daily_ave.FSNTOA-20240103T0650.py
# Version: 0.1.1-alpha
#
# Dataset
# ucar.cgd.ccsm4.cesmLME.atm.proc.daily_ave.FSNTOA
# efd1b249-3175-4c5b-a4c7-b1849af335bc
# https://www.earthsystemgrid.org/dataset/ucar.cgd.ccsm4.cesmLME.atm.proc.daily_ave.FSNTOA.html
# https://www.earthsystemgrid.org/dataset/id/efd1b249-3175-4c5b-a4c7-b1849af335bc.html
#
# Dataset Version
# 2
# 9e5cfbbf-e0fa-4f43-ba61-cc8b27e6ad02
# https://www.earthsystemgrid.org/dataset/ucar.cgd.ccsm4.cesmLME.atm.proc.daily_ave.FSNTOA/version/2.html
# https://www.earthsystemgrid.org/dataset/version/id/9e5cfbbf-e0fa-4f43-ba61-cc8b27e6ad02.html
#
################################################################

print(
    "This Python 3 download script is experimental.  Please email feedback to esg-support@earthsystemgrid.org.\n"
)

args = {}
args.update({"apiToken": "CuhktoZFY57XRiQLxQi2q1GuDXMf8Sx7XJt4dB8P"})
args.update(
    {
        "userAgent": "python/{}/gateway/{}".format(
            python_version(), "4.4.0-20231212-233322"
        )
    }
)

data = [
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.001.cam.h1.FSNTOA.08500101-18491231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.001.cam.h1.FSNTOA.08500101-18491231.nc",
        "bytes": "14285614242",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.001.cam.h1.FSNTOA.18500101-20051231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.001.cam.h1.FSNTOA.18500101-20051231.nc",
        "bytes": "2228395693",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.002.cam.h1.FSNTOA.08500101-18491231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.002.cam.h1.FSNTOA.08500101-18491231.nc",
        "bytes": "14284697220",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.002.cam.h1.FSNTOA.18500101-20051231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.002.cam.h1.FSNTOA.18500101-20051231.nc",
        "bytes": "2228113329",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.003.cam.h1.FSNTOA.08500101-18491231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.003.cam.h1.FSNTOA.08500101-18491231.nc",
        "bytes": "14285271941",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.003.cam.h1.FSNTOA.18500101-20051231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.003.cam.h1.FSNTOA.18500101-20051231.nc",
        "bytes": "2228514528",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.004.cam.h1.FSNTOA.08500101-18491231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.004.cam.h1.FSNTOA.08500101-18491231.nc",
        "bytes": "14285307402",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.004.cam.h1.FSNTOA.18500101-20051231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.004.cam.h1.FSNTOA.18500101-20051231.nc",
        "bytes": "2228234116",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.005.cam.h1.FSNTOA.08500101-18491231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.005.cam.h1.FSNTOA.08500101-18491231.nc",
        "bytes": "14285827102",
    },
    {
        "url": "https://tds.ucar.edu/thredds/fileServer/datazone/campaign/cesm/collections/cesmLME/CESM-CAM5-LME/atm/proc/tseries/daily/FSNTOA/b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.005.cam.h1.FSNTOA.18500101-20051231.nc",
        "filename": "b.e11.BLMTRC5CN.f19_g16.VOLC_GRA.005.cam.h1.FSNTOA.18500101-20051231.nc",
        "bytes": "2228285227",
    },
]


def main(args, data):
    for download in createDownloads(args, data):
        if isCompleteDownload(download):
            completeDownload(download)
        elif isPartialDownload(download):
            resumeDownload(download)
        else:
            startDownload(download)


def createDownloads(args, data):
    downloads = []

    for d in data:
        download = Download(d)
        download.setApiToken(args.get("apiToken"))
        download.setUserAgent(args.get("userAgent"))
        downloads.append(download)

    return downloads


def isCompleteDownload(download):
    return os.path.isfile(download.getFilename())


def isPartialDownload(download):
    return os.path.isfile(download.getPart())


def completeDownload(download):
    print("complete:", download.getFilename())


def resumeDownload(download):
    print("resuming:", download.getFilename())

    headers = createHeaders(download)
    headers.append(createRangeHeader(download))

    opener = urllib.request.build_opener()
    opener.addheaders = headers

    tryDownloadFile(download, opener)


def startDownload(download):
    print("downloading:", download.getFilename())

    headers = createHeaders(download)

    opener = urllib.request.build_opener()
    opener.addheaders = headers

    tryDownloadFile(download, opener)


def createHeaders(download):
    headers = []

    headers.append(("User-agent", download.getUserAgent()))

    if download.getApiToken():
        headers.append(("Authorization", f"api-token {download.getApiToken()}"))

    return headers


def createRangeHeader(download):
    start = os.path.getsize(download.getPart())
    header = ("Range", f"bytes={start}-")

    return header


def tryDownloadFile(download, opener):
    try:
        downloadFile(download, opener)
    except HTTPError as error:
        print(
            "Download of {} failed! Reason: code {}, {}".format(
                download.getFilename(), error.status, error.reason
            )
        )
    except URLError as error:
        print(f"Download of {download.getFilename()} failed! Reason: {error.reason}")
    except TimeoutError:
        print(f"Download of {download.getFilename()} failed! Reason: request timed out")


def downloadFile(download, opener):
    with opener.open(download.getUrl()) as response, open(
        download.getPart(), "ab"
    ) as fh:
        shutil.copyfileobj(response, fh)

    os.rename(download.getPart(), download.getFilename())

    print("complete:", download.getFilename())


class Download:
    def __init__(self, datum):
        self.url = datum.get("url")
        self.filename = datum.get("filename")
        self.bytes = datum.get("bytes")
        self.part = self.filename + ".part"
        self.apiToken = None
        self.userAgent = "python"

    def getUrl(self):
        return self.url

    def getFilename(self):
        return self.filename

    def getBytes(self):
        return self.bytes

    def getPart(self):
        return self.part

    def setApiToken(self, apiToken):
        self.apiToken = apiToken

    def getApiToken(self):
        return self.apiToken

    def setUserAgent(self, userAgent):
        self.userAgent = userAgent

    def getUserAgent(self):
        return self.userAgent

    def __str__(self):
        return ", ".join(
            [
                "url: " + self.url,
                "filename: " + self.filename,
                "bytes: " + str(self.bytes),
            ]
        )


main(args, data)
