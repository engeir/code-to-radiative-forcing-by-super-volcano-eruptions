[project]
name = "paper1-code"
version = "0.12.0"
description = "Code to download and analyse data for a paper"
authors = [{ name = "engeir", email = "engeir@pm.me" }]
license = { file = "MIT" }
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
  "numpy>=1.26.4",
  "matplotlib>=3.9.2",
  "scipy>=1.14.0",
  "cftime>=1.6.4",
  "h5netcdf>=1.3.0",
  "nc-time-axis>=1.4.1",
  "cosmoplots>=0.4.3",
  "matplotlib-label-lines>=0.7.0",
  "returns>=0.23.0",
  "requests>=2.32.3",
  "rich>=13.7.1",
  "types-requests>=2.32.0.20240712",
  "gitpython>=3.1.43",
  "plastik>=0.6.2",
  "volcano-base>=2.3.2",
  "xarray==2024.2.0",
  "dask>=2024.8.0",
  "netcdf4>=1.7.1.post2",
  "pyqt6>=6.7.1",
]

# [tool.uv.sources]
# volcano-base = { path = "../volcano-base" }

[project.scripts]
generate-figs = "paper1_code.scripts.gen_figs:main"
generate-fig1 = "paper1_code.scripts.gen_fig1:main"
generate-fig2 = "paper1_code.scripts.gen_fig2:main"
generate-fig3 = "paper1_code.scripts.gen_fig3:main"
generate-fig4 = "paper1_code.scripts.gen_fig4:main"

[tool.uv]
dev-dependencies = [
  "pyupgrade>=3.17.0",
  "pytest>=8.3.2",
  "pre-commit>=3.8.0",
  "pre-commit-hooks>=4.6.0",
  "ruff>=0.5.7",
  "pydocstringformatter>=0.7.3",
  "xdoctest>=1.1.6",
  "mypy>=1.11.1",
  "jsonschema>=4.23.0",
  "pydoclint>=0.5.6",
]

[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[tool.mypy]
files = ["src", "tests"]
ignore_missing_imports = true
allow_redefinition = false
check_untyped_defs = true
ignore_errors = false
implicit_reexport = false
local_partial_types = true
no_implicit_optional = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
# Files that were downloaded
extend-exclude = ["python-ucar.cgd.ccsm4.cesmLME*py"]

# Same as Black.
line-length = 88

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
select = [ # https://docs.astral.sh/ruff/rules/
  "B",  # flake8-bugbear
  "D",  # pydocstyle
  "E",  # pycodestyle
  "F",  # pyflakes
  "I",  # isort
  "PL", # pylint
  "Q",  # flake8-quotes
  "UP", # pyupgrade
]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]  # These are the default
# https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
ignore = [
  # "COM812", # Since we don't select COM, this is already ignored
  # "COM819", # Since we don't select COM, this is already ignored
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "E266",
  "E501",
  # "ISC001", # Since we don't select ISC, this is already ignored
  # "ISC002", # Since we don't select ISC, this is already ignored
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  # "W191",  # Since we don't select W, this is already ignored
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "numpy"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.flake8-import-conventions]
[tool.ruff.lint.flake8-import-conventions.aliases]
# Declare the default aliases.
"matplotlib.pyplot" = "plt"
numpy = "np"
scipy = "sp"
xarray = "xr"
paper1_code = "core"

[tool.ruff.lint.isort]
case-sensitive = true
known-local-folder = ["src", "paper1_code"]

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
profile = "black"
combine_as_imports = true

[tool.pydocstringformatter]
write = true
strip-whitespaces = true
split-summary-body = false
numpydoc-section-hyphen-length = false
style = ["pep257", "numpydoc"]
